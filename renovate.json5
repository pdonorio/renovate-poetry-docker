{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':combinePatchMinorReleases',
  ],
  // default timezone is UTC, so this schedule is expected to be outside
  // the normal working hours for most of our engs
  schedule: [
    'on Monday',
  ],
  // Please note these settings are global, ATM Renovate does not allow
  // to set these at manager / path / rule level
  branchConcurrentLimit: 150,
  prConcurrentLimit: 150,
  prHourlyLimit: 15,

  // Self Hosted Bot
  username: 'renovate-github-actions[bot]',
  gitAuthor: 'renovate-github-actions[bot] <135154770+renovate-github-actions[bot]@users.noreply.github.com>',
  onboarding: false,
  requireConfig: 'optional',
  platform: 'github',
  repositories: [
    'pdonorio/renovate-poetry-docker'
  ],
  // Change commit message from
  // from: Update dependency {{depName}} to XXX
  // to:   Bump {{depName}} to XXX
  commitMessageAction: 'Bump',
  commitMessageExtra: 'to {{newVersion}}',
  commitMessageTopic: '{{depName}}',
  // Append update table to commit message
  commitBodyTable: true,

  // this is a default value to detect if any bump will not
  // be correctly carategorized by the packageRules below
  commitMessagePrefix: '[deps] ',

  // Get PRs if config file migration is needed
  configMigration: true,

  // Enable Dependency Dashboard (requires GitHub Issues to be enabled too)
  dependencyDashboard: true,

  // assign dependencies labels to all PRs
  labels: [
    'dependencies',
  ],

  // Use platform API to perform commits instead of using Git
  // This way Renovate can use GitHub's Commit signing support
  // and other GitHub Apps feature
  platformCommit: true,

  // Create PRs to roll back versions if the current version
  // is not found in the registry
  rollbackPrs: true,

  // Number of days required before a new release is
  // considered stable and will be proposed for bumps
  minimumReleaseAge: '1 day',

  // Enable remediation of transitive dependencies
  transitiveRemediation: true,

  // Enable Automerge. Please note that PR approval is still
  // needed to allow Renovate to merge
  // automergeType is 'pr' by default
  // can't enable platformAutomerge because we haven't passing status checks required
  // rebaseWhen conflict to avoid Renovate to rebase all PRs every time a commit is merged on main
  automerge: true,
  automergeStrategy: 'squash',
  rebaseWhen: 'conflict',
  // Renovate does not assign reviewers and assignees to
  // automerge-enabled PR unless it fails status checks.
  // With this setting Renovate will instead assign reviewers and
  // assignees for automerging PRs at time of creation.
  assignAutomerge: true,

  // Include dev requirements and other non standard requirements files
  pip_requirements: {
    fileMatch: [
      '(^|/)requirements(\\.|-)(dev|protos).txt$',
    ],
  },
  poetry: {
    // rollbackPr breaks updates for poetry
    // https://github.com/renovatebot/renovate/issues/17374
    rollbackPrs: false,
  },
  packageRules: [
    {
      matchManagers: [
        'pip_requirements',
        'pyenv',
      ],
      commitMessagePrefix: '[dev][deps] ',
      additionalBranchPrefix: 'dev-',
    },
    // Commit message overrides
    // See https://github.com/renovatebot/renovate/discussions/13792
    {
      matchDatasources: [
        'docker',
        'helm',
        'terraform',
      ],
      commitMessageTopic: '{{depName}}',
      commitMessageExtra: 'to {{newVersion}}',
    },
    // Github Actions
    {
      // this should mostly overlap matchManagers: ['github-actions']
      matchFileNames: [
        '.github/**',
      ],
      commitMessagePrefix: '[ci][deps] ',
      additionalBranchPrefix: 'ci-',
    },
  ],
  customManagers: [
    // Manage custom lib version inside Dockerfiles,
    // Currently only working for Poetry in QA folder.
    // It may be extended for all versions inside any Dockerfile, see
    // https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
    {
      customType: 'regex',
      datasourceTemplate: 'pypi',
      depNameTemplate: 'poetry',
      fileMatch: [
        '^qa/infra/.*/Dockerfile$',
      ],
      matchStrings: [
        'ENV POETRY_VERSION=(?<currentValue>.*?)\\n',
      ],
    },
  ],

  // Extended configuration in case of vulnerability alerts
  // Expected to be at the end of the configuration to override previous
  // settings. Please note that in case of security upgrades the bump
  // is forcibly enabled.
  vulnerabilityAlerts: {
    // Force the bump even if previously disabled (e.g. for npm)
    enabled: true,
    addLabels: [
      'security',
    ],
    minimumReleaseAge: null,
    prCreation: 'immediate',
  },

  // Enable integration with osv.dev
  osvVulnerabilityAlerts: true,

  // This option enables the list of (all) the OSV-sourced CVEs in a new
  // specific section of the Dependency Dashboard
  dependencyDashboardOSVVulnerabilitySummary: 'all',
}
